---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import BggHeader from '../../components/BggHeader.astro';
import { thing } from '../../shared/bgg';

export async function getStaticPaths() {
  const entries = await getCollection('boardgame');
  return entries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const id = entry.data['bgg-id'];
const [boardgame] = await thing({
  id: id.toString(),
  withStats: true,
});
if (!boardgame) throw new Error(`No BGG game found with id '${id}'`);

const nameLocalized = boardgame.name.alternate.find((s) => s.match(/[가-힣]/));
const title =
  entry.data.title ??
  (nameLocalized
    ? `${nameLocalized} (${boardgame.name.primary})`
    : boardgame.name.primary);
---

<Layout title={`Zeminni - ${title}`}>
  <a href="/boardgame">목록으로</a>
  <BggHeader boardgame={boardgame} />
  <main>
    <Content />
  </main>
</Layout>

<style>
  a,
  a:visited {
    color: inherit;
  }
</style>
